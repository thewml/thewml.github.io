<!-- MHonArc v2.4.6 -->
<!--X-Subject: Re: [wml] Re: [wml] e) or f) : unknown tags parsing -->
<!--X-From-R13: Fbovnf Argvxre <brgvxreNrr.rgum.pu> -->
<!--X-Date: Mon, 29 May 2000 22:34:03 +0200 (MET DST) -->
<!--X-Message-Id: Pine.GSO.4.21.0005292220230.988&#45;100000@tardis.ee.ethz.ch -->
<!--X-Content-Type: text/plain -->
<!--X-Reference: 20000529175752.B592@matrix.42.org -->
<!--X-Head-End-->
<!--#include file="header.inc" -->
<!--X-Body-Begin-->
<!--X-User-Header-->
<!--X-User-Header-End-->
<!--X-TopPNI-->
<hr>
[<a href="mail34.shtml#01655">Date Index</a>][<a href="thrd33.shtml#01655">Thread Index</a>]<br>
[<A HREF="msg01654.shtml">Date Prev</A>][<A HREF="msg01656.shtml">Date Next</A>][<A HREF="msg01654.shtml">Thread Prev</A>][<A HREF="msg01656.shtml">Thread Next</A>]

<!--X-TopPNI-End-->
<!--X-MsgBody-->
<!--X-Subject-Header-Begin-->
<H1>Re: [wml] Re: [wml] e) or f) : unknown tags parsing</H1>
<HR>
<!--X-Subject-Header-End-->
<!--X-Head-of-Message-->
<UL>
<LI><em>From</em>: Tobias Oetiker &lt;nospam@thanx&gt;</LI>
<LI><em>Date</em>: Mon, 29 May 2000 22:32:48 +0200 (MET DST)</LI>
</UL>
<!--X-Head-of-Message-End-->
<!--X-Head-Body-Sep-Begin-->
<HR>
<!--X-Head-Body-Sep-End-->
<!--X-Body-of-Message-->
<PRE>
Today you sent me mail regarding [wml] Re: [wml] e) or f) : unknown tags...:

*&gt; On Mon, May 29, 2000 at 05:37:14PM +0200, Denis Barbier wrote:
*&gt; &gt; So here are our choices:
*&gt; &gt;   e) Unknown tags are always simple.
*&gt; &gt;      Drawback: logical structure is not preserved, e.g.
*&gt; &gt;         &lt;lang:en: &lt;b&gt;This is a test&lt;/b&gt;&gt;
*&gt; &gt;                has 4 attributes: &lt;b&gt;This, is, a, test&lt;/b&gt;
*&gt; &gt;       
*&gt; &gt;   f) Trailing slash determines tag type.
*&gt; &gt;      Drawback: in some situations, HTML tags must be protected.
*&gt; &gt; 
*&gt; &gt; Could anyone evaluate pros and cons and send feedback?
*&gt; 
*&gt; I'd say e)
*&gt; 
*&gt; Why? 
*&gt; - In most cases there is only one argument needed. In this cases we can
*&gt;   (implictly) join all arguments and use them as arg1.

this is not the case in our setup ... we love multi argument
complex tags ...

*&gt; - Some other cases could be changed (like &lt;ifeq&gt;) to use a simpler
*&gt;   syntax, thus beeing no problem.
this is cosmetics ... the core must be clean ... 

*&gt; - If there remain any cases, we should be able to solve this by some
*&gt;   (simple?) quoting. &lt;tag "&lt;b&gt;foo bar&lt;/b&gt;" "&lt;i&gt;baz quux&lt;/i&gt;"&gt;

well the quoating thing might also be a problem ... 

Our use of mp4h is mostly that we 

a) redifine existing HTML tags to produce something nice ... eg
   &lt;H1&gt;xxxx&lt;/H1&gt; ends up as a gif with xxxx graphical contents 
   in the final page

b) we create complex tags like
   &lt;LINK TITLE="Blabl" HREF="http://.."&gt;
   link description
   &lt;/LINK&gt;

The set of tags defined in a) may change at any moment ... so if
wml defies all unknown tags as simple this may lead to things
breaking badly when new tags are introduced. Which shadow existing
html tags.

So how about this:

In the old metahtml it was possible to protect a tag (maybe this
is still the case today) by putting a * into the tag name
&lt;table*&gt;....&lt;/table*&gt; so how about requiering these starts to be
present in all tags which should be parsed as simple  tags and
never redefined by wml ... 

For Denis example this would look like this

&lt;XXX&gt;&lt;/XXX&gt; and &lt;YYY&gt;&lt;/YYY&gt; are complex tags

In a Navbar like environment we want to do something like this:

&lt;XXX&gt;&lt;TABLE&gt;&lt;/XXX&gt; &lt;YYY&gt;&lt;/TABLE&gt;&lt;/YYY&gt;

Using strict parsing this would not be allowed on the other hand if
we at some point redefine &lt;TABLE&gt; in wml everything will break.

So instead we require that the user marks table as NON parsable
simple tags by writing:

&lt;XXX&gt;&lt;TABLE*&gt;&lt;/XXX&gt; &lt;YYY&gt;&lt;/TABLE*&gt;&lt;/YYY&gt; 

&lt;TABLE&gt; will now always remain &lt;TABLE&gt; in this context even if I
redefine the normal &lt;TABLE&gt; tag to have some other meaning eg to
work with layers or some other new technique ...

As for the xhtml parsing rules I would love to see them added
optionally ... 

&lt;BR*/&gt; or &lt;BR*&gt; for that matter ... 

cheers
tobi




*&gt; Does this sound sensible?

*&gt; 
*&gt; CU,
*&gt;     Sec
*&gt; 

-- 
 ______    __   _
/_  __/_  / /  (_) Oetiker, Timelord &amp; SysMgr @ EE-Dept ETH-Zurich
 / // _ \/ _ \/ / TEL: +41(0)1-6325286  FAX:...1517  ICQ: 10419518 
/_/ \.__/_.__/_/ oetiker@ee.ethz.ch <A  HREF="http://ee-staff.ethz.ch/~oetiker">http://ee-staff.ethz.ch/~oetiker</A>

______________________________________________________________________
Website META Language (WML)                www.engelschall.com/sw/wml/
Official Support Mailing List                   sw-wml@engelschall.com
Automated List Manager                       majordomo@engelschall.com

</PRE>

<!--X-Body-of-Message-End-->
<!--X-MsgBody-End-->
<!--X-Follow-Ups-->
<HR>
<UL><LI><STRONG>Follow-Ups</STRONG>:
<UL>
<li><strong><A NAME="01656" HREF="msg01656.shtml">Re: [wml] Re: [wml] e) or f) : unknown tags parsing</A></strong>, <em>From:</em> Denis Barbier</li>
</UL></LI></UL>
<!--X-Follow-Ups-End-->
<!--X-References-->
<UL><LI><STRONG>References</STRONG>:
<UL>
<li><strong><A NAME="01654" HREF="msg01654.shtml">Re: [wml] e) or f) : unknown tags parsing</A></strong>, <em>From:</em> Stefan `Sec` Zehl</li>
</UL></LI></UL>
<!--X-References-End-->
<!--X-BotPNI-->
<UL>
<LI>Prev by Date:
<STRONG><A HREF="msg01654.shtml">Re: [wml] e) or f) : unknown tags parsing</A></STRONG>
</LI>
<LI>Next by Date:
<STRONG><A HREF="msg01656.shtml">Re: [wml] Re: [wml] e) or f) : unknown tags parsing</A></STRONG>
</LI>
<LI>Prev by thread:
<STRONG><A HREF="msg01654.shtml">Re: [wml] e) or f) : unknown tags parsing</A></STRONG>
</LI>
<LI>Next by thread:
<STRONG><A HREF="msg01656.shtml">Re: [wml] Re: [wml] e) or f) : unknown tags parsing</A></STRONG>
</LI>
<LI>Index(es):
<UL>
<LI><A HREF="mail34.shtml#01655"><STRONG>Date</STRONG></A></LI>
<LI><A HREF="thrd33.shtml#01655"><STRONG>Thread</STRONG></A></LI>
</UL>
</LI>
</UL>

<!--X-BotPNI-End-->
<!--X-User-Footer-->
<!--X-User-Footer-End-->
<!--#include file="footer.inc" -->
