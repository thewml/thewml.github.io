<!-- MHonArc v2.4.6 -->
<!--X-Subject: Re: Examples: WML Itself -->
<!--X-From-R13: efrNratryfpunyy.pbz (Dnys E. Satryfpunyy) -->
<!--X-Date: Wed, 24 Dec 1997 09:45:33 +0100 (MET) -->
<!--X-Message-Id: 199712240845.JAA01908@en1.engelschall.com -->
<!--X-Content-Type: text/plain -->
<!--X-Head-End-->
<!--#include file="header.inc" -->
<!--X-Body-Begin-->
<!--X-User-Header-->
<!--X-User-Header-End-->
<!--X-TopPNI-->
<hr>
[<a href="date.shtml#00010">Date Index</a>][<a href="thread.shtml#00010">Thread Index</a>]<br>
[<A HREF="msg00009.shtml">Date Prev</A>][<A HREF="msg00011.shtml">Date Next</A>][<A HREF="msg00009.shtml">Thread Prev</A>][<A HREF="msg00013.shtml">Thread Next</A>]

<!--X-TopPNI-End-->
<!--X-MsgBody-->
<!--X-Subject-Header-Begin-->
<H1>Re: Examples: WML Itself</H1>
<HR>
<!--X-Subject-Header-End-->
<!--X-Head-of-Message-->
<UL>
<LI><em>From</em>: nospam@thanx (Ralf S. Engelschall)</LI>
<LI><em>Date</em>: Wed, 24 Dec 1997 09:45:30 +0100 (MET)</LI>
</UL>
<!--X-Head-of-Message-End-->
<!--X-Head-Body-Sep-Begin-->
<HR>
<!--X-Head-Body-Sep-End-->
<!--X-Body-of-Message-->
<PRE>

In article &lt;<A HREF="msg00009.shtml">199712231749.MAA30050@plymouth.truespectra.com</A>&gt; you wrote:

&gt; I thought I would show off my use of WML a little bit.

Thanks a lot, it is always a good idea to spread experience.

&gt; <A  HREF="http://www.truespectra.com/">http://www.truespectra.com/</A>

&gt; The front page is a "special case", and all the other ones are built
&gt; off of a template that looks like this:

&gt; #use wml::usr::ts
&gt; &lt;tspage title="TrueSpectra Products"&gt;
&gt; &lt;nav place="Products"&gt;
&gt; &lt;divider&gt;                     
&gt; .. content goes here  ...
&gt; &lt;/tspage&gt;

I've poked around in this website and it looks good and clean.  And because of
the good similarity of the page layout a WML-based approach is a good one,
too.

Just a few things I've discovered:

1. The pages have 
   &lt;body bgcolor="#000000" text=ffff60 link=00d0d0 vlink=00a0a0 alink=ff7070&gt;
   First, as a side question, how can does be created with WML?
   WML (at least from 1.4.7 up) would create:

   rse@en1:/u/rse
   :&gt; echo '&lt;body bgcolor="#000000" text=ffff60 link=00d0d0 vlink=00a0a0
   alink=ff7070&gt;' | wml
   &lt;body bgcolor="#000000" text="#ffff60" link="#00d0d0" vlink="#00a0a0"
   alink="#ff7070"&gt;
   rse@en1:/u/rse
   :&gt; 

   I.e. the color attributes get fixed and surrounded with quotes.  Do you
   just create a subset of the page contents with WML and glue together with
   another tool, or there SSI with the game?

   Either way, I recommend you to at least (let) add the '#' chars.

2. The colors from 1.) are not all in the 216-color-cube (browser
   safe colors). To avoid color substitutions, I recommend you
   to align them to the nearest ones from the color-cube.
   For instance instead of
     &lt;body bgcolor="#000000" text="#ffff60" 
           link="#00d0d0" vlink="#00a0a0" alink="#ff7070"&gt;
   use:
     &lt;body bgcolor="#000000" text="#ffff66" 
           link="#00cccc" vlink="#009999" alink="#ff6666"&gt;

2. On a few pages I see in the source that you successfully used
   wml::std::toc. Great! ;_)

3. There are a lot of pages with absolute hyperlinks in them
   like ``&lt;a href="<A  HREF="http://www.truespectra.com/">http://www.truespectra.com/</A>..''. I personally thing this
   makes your site a little bit static. For instance you cannot easily make a
   version under a subdir where you work and from where the pages are then
   distributed to the final place. Even with a virtual server, there is no
   chance for such work&lt;-&gt;production separation. And some time when the site
   is big enough such a separation is needed. So I recommend you at least to
   remove the <A  HREF="http://www.truespectra.com">http://www.truespectra.com</A> part from the URL, i.e. let them
   start with / only. Or even better: Use WML's auto-adustable path variables
   and let WML calculate the relative paths between each page. See the ``WML
   Itself'' pages and how I let WML calculate all URLs in the navbars via this
   approach.

4. There are images like ``img
   src="<A  HREF="http://www.truespectra.com/images/tsramp-mini.jpg">http://www.truespectra.com/images/tsramp-mini.jpg</A>" alt="TrueSpectra
   Home Page" border="0"&gt;''. Here I again wondering how this can survive WML,
   because WML always would add correct width/height attributes to speedup the
   page rendering. I think the reason is because this stuff is some
   SSI-includes? I so, then replace this with a WML #include, i.e.  create the
   complete page via WML. This way WML can add the width/height attributes. Or
   at least add them manually by piping the SSI-includes through WML to easily
   determine the width/height dimensions.

&gt; The &lt;nav place="..."&gt; tag is what generates that tree-like navigator along
&gt; the side.  I have a directory contains the various navigation targets, 
&gt; for instance:

&gt; $ ls ~/nav/Products*

&gt; /home/www/nav/Products
&gt; /home/www/nav/Products_Beta.testing
&gt; /home/www/nav/Products_Online.ordering
&gt; /home/www/nav/Products_PhotoGraphics
&gt; /home/www/nav/Products_PhotoGraphics_OS2
&gt; /home/www/nav/Products_PhotoGraphics_PRO.for.OS2
&gt; /home/www/nav/Products_PhotoGraphics_Windows   

&gt; These names are then used to generate the links to the files themselves;
&gt; in the last case, the corresponding URL is understood to be

&gt; <A  HREF="http://www.truespectra.com/products/photographics/windows.html">http://www.truespectra.com/products/photographics/windows.html</A>

&gt; _ is the directory separator
&gt; . is a space

&gt; The script figures out which parts of the tree to expose and does it,
&gt; generating corresponding style sheet and other markup.  (The pages
&gt; degrade from IE / Netscape 4 to Lynx)

&gt; Scripts &amp;c. available on request.

That's an interesting file-system-based approach for a navbar.  Hmmmmm... if
you can limite the files that's fine this way.  But which feature for the
grammar-based wml::des::navbar would be required to let us create the same
with it? I just ask because there have to be a reason why you choose your
approach.  Perhaps I've missed some essential feature in wml::des::navbar
which restricts it too much in use? Just give a few hints. Thanks.  Or did you
start your work on the navbar before wml::des::navbar arrived?

In general to summarize: The complete website looks good. Keep on your work...

Greetings,
                                       Ralf S. Engelschall
                                       rse@engelschall.com
                                       www.engelschall.com
______________________________________________________________________
Website META Language (WML)                www.engelschall.com/sw/wml/
Official Support Mailing List                   sw-wml@engelschall.com
Automated List Manager                       majordomo@engelschall.com

</PRE>

<!--X-Body-of-Message-End-->
<!--X-MsgBody-End-->
<!--X-Follow-Ups-->
<HR>
<UL><LI><STRONG>Follow-Ups</STRONG>:
<UL>
<li><strong><A NAME="00013" HREF="msg00013.shtml">Re: Examples: WML Itself</A></strong>, <em>From:</em> Stephen van Egmond</li>
</UL></LI></UL>
<!--X-Follow-Ups-End-->
<!--X-References-->
<!--X-References-End-->
<!--X-BotPNI-->
<UL>
<LI>Prev by Date:
<STRONG><A HREF="msg00009.shtml">Re: Examples: WML Itself</A></STRONG>
</LI>
<LI>Next by Date:
<STRONG><A HREF="msg00011.shtml">Feature Demonstration Pages</A></STRONG>
</LI>
<LI>Prev by thread:
<STRONG><A HREF="msg00009.shtml">Re: Examples: WML Itself</A></STRONG>
</LI>
<LI>Next by thread:
<STRONG><A HREF="msg00013.shtml">Re: Examples: WML Itself</A></STRONG>
</LI>
<LI>Index(es):
<UL>
<LI><A HREF="date.shtml#00010"><STRONG>Date</STRONG></A></LI>
<LI><A HREF="thread.shtml#00010"><STRONG>Thread</STRONG></A></LI>
</UL>
</LI>
</UL>

<!--X-BotPNI-End-->
<!--X-User-Footer-->
<!--X-User-Footer-End-->
<!--#include file="footer.inc" -->
