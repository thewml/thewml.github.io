<!-- MHonArc v2.4.6 -->
<!--X-Subject: New WML features for gif generation (patch) -->
<!--X-From-R13: Fubznf Oxva <gnxvaNxraarfnj.rqh> -->
<!--X-Date: Thu, 21 Oct 1999 08:15:40 +0200 (MET DST) -->
<!--X-Message-Id: 19991020165713.B18563@Aramis.kennesaw.edu -->
<!--X-Content-Type: text/plain -->
<!--X-Head-End-->
<!--#include file="header.inc" -->
<!--X-Body-Begin-->
<!--X-User-Header-->
<!--X-User-Header-End-->
<!--X-TopPNI-->
<hr>
[<a href="mail22.shtml#01082">Date Index</a>][<a href="thrd22.shtml#01082">Thread Index</a>]<br>
[<A HREF="msg01081.shtml">Date Prev</A>][<A HREF="msg01083.shtml">Date Next</A>][<A HREF="msg01085.shtml">Thread Prev</A>][<A HREF="msg01084.shtml">Thread Next</A>]

<!--X-TopPNI-End-->
<!--X-MsgBody-->
<!--X-Subject-Header-Begin-->
<H1>New WML features for gif generation (patch)</H1>
<HR>
<!--X-Subject-Header-End-->
<!--X-Head-of-Message-->
<UL>
<LI><em>From</em>: Thomas Akin &lt;nospam@thanx&gt;</LI>
<LI><em>Date</em>: Wed, 20 Oct 1999 16:57:13 -0400</LI>
</UL>
<!--X-Head-of-Message-End-->
<!--X-Head-Body-Sep-Begin-->
<HR>
<!--X-Head-Body-Sep-End-->
<!--X-Body-of-Message-->
<PRE>
Name: wml174.imgdir.patch
WML Version: 1.7.4
Patch Author: Thomas Akin


Applying the Patch:

	 1) copy the patch to your wml-1.7.4 directory

	 2) delete everything up to and including the line
	    ------- &lt;cut here&gt; -------------------
	 
	 3) run 'patch -b -p1 &lt; patchfilename'
	    where "patchfilename" is the name of the patch file. 


Function:

	This patch allows you to easily designate a new location where
	images generated by des::gfont, des::imgbg, des::imgdot, and
	std::logo to be created. This is done by

	- adding a "dir" attribute to the above features

	- adding feature specific wml variables:
		     GFONT_DIR
		     IMGBG_DIR
		     IMDOT_DIR
		     LOGO_DIR

	- adding a "IMGDIR" variable which redirects all generated
	  gifs to the defined location.

Why:

	Again, because I needed it :)

	I tend to be a fairly organized person and having gifs
	generated directly into my working directory grated on my
	nerves... For I while I played around with the base options to
	get my gifs generated neatly in their own directory, but doing
	this broke the nice filename.feature.gif naming convention.

	If I put the following line in home.wml

	&lt;imgdot base="images"&gt; 

	a gif was created called "images/.imgdot-1x1-trans.gif". We
	have lost our per file uniqueness. I then started using

	&lt;imgdot base="images/home"&gt;

	which created the gif with the right name, but now I have to
	specify a base name for every gif that is created. I have lost
	the automatic naming feature. Dealing with this gets
	especially annoying when using templates...

	So... My sense of order required an elegant way to redirect
	newly created gifs into a separate location while retaining
	the automatic naming features...

	Enter the "dir" attribute. This patch adds a "dir" attribute
	to the features provided by these include files:

	des::gfont
	des::imgbg
	des::imgdot
	std::logo

	which allows you to specify a separate directory to place
	generated gifs. For the home.wml example above you can simply
	use

	&lt;imgdot dir="images"&gt;

	and the gif will be generated as
	"images/home.imgdot-1x1-trans.gif". 

	For consistency and to avoid having to specify the dir
	attribute every time you render a gif this patch also adds the
	wml variables

	GFONT_DIR
	BGIMG_DIR
	IMGDOT_DIR
	LOGO_DIR

	which you use just like any other wml variable:

	wml -DIMGDOT_DIR~images home.wml

	this example causing any imgdot gifs generated to be created
	in the "images" directory.

	Lastly, generally when you redirect gifs generated by wml you
	want them sent the same directory. To avoid having to set all
	four variables to the same setting, the wml variable "IMGDIR"
	was added to direct all generated gifs into the specified
	directory.

	To generate a site with all gifs generated in the "images"
	directory you can now simply use

	wmk -DIMGDIR~images


Precedence:

	Here is the precedence of these additions

	1) uses the "dir" attribute if specified
	2) uses the feature specific wml variable if specified
	   ie. GFONT_DIR
	       BGIMG_DIR
	       IMGDOT_DIR
	       LOGO_DIR
        3) uses the IMGDIR variable if specified
	4) if none of the above are set it uses the default behavior
	       

That's it.... Let me know if you find this useful or have any
questions... Denis, again, any chance of these features making it into
the next release?  I've notice some past discussions on the mailing
list asking about this feature so I think It would be put to good
use...


Thanks,


Thomas
---------------------------------------------------------------
Thomas Akin                       Kennesaw State University
Networking Instructor             Continuing Education
CNX, CSA, ICS                     1000 Chastain Road
takin@kennesaw.edu                Kennesaw, GA 30144-5591
---------------------------------------------------------------


------- &lt;cut here&gt; -------------------

Index: wml-1.7.4/wml_include/des/gfont.src
*** wml-1.7.4/wml_include/des/gfont.src	Tue Sep 21 09:37:55 1999
--- wml-1.7.4.1/wml_include/des/gfont.src	Wed Oct 20 14:56:03 1999
***************
*** 17,20 ****
--- 17,21 ----
  &lt;define-container gfont whitespace=delete&gt;
  &lt;preserve base&gt;
+ &lt;preserve dir&gt;
  &lt;preserve color&gt;
  &lt;preserve bgcolor&gt;
***************
*** 33,40 ****
--- 34,45 ----
         &lt;match &lt;get-var WML_SRC_FILENAME&gt;
                "\\.[a-zA-Z0-9]+$" action=delete&gt;&gt;&gt;
+ &lt;defvar dir
+    &lt;or &lt;get-var GFONT_DIR&gt;
+        &lt;get-var IMGDIR&gt;&gt;&gt;
  &lt;:
  {
      #   import attributes to ePerl 
      my $base    = "&lt;get-var base&gt;";
+     my $dir	= "&lt;get-var dir&gt;";
      my $color   = "&lt;get-var color&gt;";
      my $bgcolor = "&lt;get-var bgcolor&gt;";
***************
*** 51,54 ****
--- 56,69 ----
      my $str = q|%body|;
  
+     # Deal with dir attribute
+     if ($dir ne '') {
+         $dir =~ s/\/$//;
+ 	if (! -d $dir) {
+ 	    use File::Path;
+ 	    mkpath("$dir", 0, 0755);
+ 	}
+ 	$base = $dir . "/" . $base;
+     }
+ 
      #   create the output filename
      if ($base ne '') {
***************
*** 137,140 ****
--- 152,156 ----
  &lt;restore bgcolor&gt;
  &lt;restore color&gt;
+ &lt;restore dir&gt;
  &lt;restore base&gt;
  &lt;/define-container&gt;

Index: wml-1.7.4/wml_include/des/imgbg.src
*** wml-1.7.4/wml_include/des/imgbg.src	Mon Sep 20 09:12:33 1999
--- wml-1.7.4.1/wml_include/des/imgbg.src	Wed Oct 20 14:56:22 1999
***************
*** 85,88 ****
--- 85,89 ----
  &lt;define-tag imgbg whitespace=delete&gt;
  &lt;preserve base&gt;
+ &lt;preserve dir&gt;
  &lt;preserve direction&gt;
  &lt;preserve content&gt;
***************
*** 92,95 ****
--- 93,100 ----
         &lt;match &lt;get-var WML_SRC_FILENAME&gt;
                "\\.[a-zA-Z0-9]+$" action=delete&gt;&gt;&gt;
+ &lt;defvar dir
+    &lt;or &lt;get-var BGIMG_DIR&gt;
+        &lt;get-var IMGDIR&gt;&gt;&gt;
+ 
  &lt;:
      #   import attributes to ePerl 
***************
*** 97,102 ****
--- 102,116 ----
      $direction = qq|&lt;get-var direction&gt;|;
      $content   = qq|&lt;get-var content&gt;|;
+     $dir       = qq|&lt;get-var dir&gt;|;
  
      #   determine parameter values
+     if ($dir ne '') {
+         $dir =~ s/\/$//;
+ 	if (! -d $dir) {
+ 	    use File::Path;
+ 	    mkpath("$dir", 0, 0755);
+ 	}
+ 	$base = $dir . "/" . $base;
+     }
      if ($base ne '') {
          $base .= '/' if (-d $base);
***************
*** 113,116 ****
--- 127,131 ----
  &lt;restore content&gt;
  &lt;restore direction&gt;
+ &lt;restore dir&gt;
  &lt;restore base&gt;
  &lt;/define-tag&gt;

Index: wml-1.7.4/wml_include/des/imgdot.src
*** wml-1.7.4/wml_include/des/imgdot.src	Mon Sep 20 09:12:33 1999
--- wml-1.7.4.1/wml_include/des/imgdot.src	Wed Oct 20 13:45:46 1999
***************
*** 37,40 ****
--- 37,41 ----
  &lt;define-tag imgdot whitespace=delete&gt;
  &lt;preserve base&gt;
+ &lt;preserve dir&gt;
  &lt;preserve width&gt;
  &lt;preserve height&gt;
***************
*** 48,54 ****
--- 49,59 ----
         &lt;match &lt;get-var WML_SRC_FILENAME&gt;
                "\\.[a-zA-Z0-9]+$" action=delete&gt;&gt;&gt;
+ &lt;defvar dir
+    &lt;or &lt;get-var IMGDOT_DIR&gt;
+        &lt;get-var IMGDIR&gt;&gt;&gt;
  &lt;:
      #   import attributes to ePerl 
      $base    = qq|&lt;get-var base&gt;|;
+     $dir     = qq|&lt;get-var dir&gt;|;
      $width   = qq|&lt;get-var width&gt;|;
      $height  = qq|&lt;get-var height&gt;|;
***************
*** 73,76 ****
--- 78,91 ----
      $x = ($noscale ? $width  : 1);
      $y = ($noscale ? $height : 1);
+ 
+     # Deal with dir attribute
+     if ($dir ne '') {
+         $dir =~ s/\/$//;
+ 	if (! -d $dir) {
+ 	    use File::Path;
+ 	    mkpath("$dir", 0, 0775);
+ 	}
+ 	$base = $dir . "/" . $base;
+     }
  
      #   create the actual GIF image file

Index: wml-1.7.4/wml_include/std/logo.src
*** wml-1.7.4/wml_include/std/logo.src	Tue Sep 28 05:27:43 1999
--- wml-1.7.4.1/wml_include/std/logo.src	Wed Oct 20 14:56:39 1999
***************
*** 12,15 ****
--- 12,16 ----
  &lt;preserve name&gt;
  &lt;preserve base&gt;
+ &lt;preserve dir&gt;
  &lt;preserve file&gt;
  &lt;preserve target&gt;
***************
*** 20,26 ****
--- 21,31 ----
         &lt;match &lt;get-var WML_SRC_FILENAME&gt;
                "\\.[a-zA-Z0-9]+$" action=delete&gt;&gt;&gt;
+ &lt;defvar dir
+    &lt;or &lt;get-var LOGO_DIR&gt;
+        &lt;get-var IMGDIR&gt;&gt;&gt;
  &lt;: 
      my $name   = "&lt;get-var name&gt;";
      my $base   = "&lt;get-var base&gt;";
+     my $dir    = "&lt;get-var dir&gt;";
      my $file   = "&lt;get-var file&gt;";
      my $target = "&lt;get-var target&gt;";
***************
*** 35,38 ****
--- 40,53 ----
      }
  
+     # deal with dir attribute
+     if ($dir ne '') {
+         $dir =~ s/\/$//;
+ 	if (! -d $dir) {
+ 	    use File::Path;
+ 	    mkpath("$dir", 0, 0755);
+ 	}
+ 	$base = $dir . "/" . $base;
+     }
+ 
      #   create the output filename
      if ($file eq '') {
***************
*** 73,76 ****
--- 88,92 ----
  &lt;restore file&gt;
  &lt;restore base&gt;
+ &lt;restore dir&gt;
  &lt;restore name&gt;
  &lt;/define-tag&gt;
______________________________________________________________________
Website META Language (WML)                www.engelschall.com/sw/wml/
Official Support Mailing List                   sw-wml@engelschall.com
Automated List Manager                       majordomo@engelschall.com

</PRE>

<!--X-Body-of-Message-End-->
<!--X-MsgBody-End-->
<!--X-Follow-Ups-->
<HR>
<UL><LI><STRONG>Follow-Ups</STRONG>:
<UL>
<li><strong><A NAME="01084" HREF="msg01084.shtml">Re: New WML features for gif generation (patch)</A></strong>, <em>From:</em> barbier</li>
</UL></LI></UL>
<!--X-Follow-Ups-End-->
<!--X-References-->
<!--X-References-End-->
<!--X-BotPNI-->
<UL>
<LI>Prev by Date:
<STRONG><A HREF="msg01081.shtml">New WML feature for pass 6 - Area Substitution (patch)</A></STRONG>
</LI>
<LI>Next by Date:
<STRONG><A HREF="msg01083.shtml">Re: New WML feature for pass 6 - Area Substitution (patch)</A></STRONG>
</LI>
<LI>Prev by thread:
<STRONG><A HREF="msg01085.shtml">Re: New WML feature for pass 6 - Area Substitution (patch)</A></STRONG>
</LI>
<LI>Next by thread:
<STRONG><A HREF="msg01084.shtml">Re: New WML features for gif generation (patch)</A></STRONG>
</LI>
<LI>Index(es):
<UL>
<LI><A HREF="mail22.shtml#01082"><STRONG>Date</STRONG></A></LI>
<LI><A HREF="thrd22.shtml#01082"><STRONG>Thread</STRONG></A></LI>
</UL>
</LI>
</UL>

<!--X-BotPNI-End-->
<!--X-User-Footer-->
<!--X-User-Footer-End-->
<!--#include file="footer.inc" -->
